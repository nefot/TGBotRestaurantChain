# Generated by Django 5.1.7 on 2025-03-22 11:51

import SecurityStaff.models.post
import SecurityStaff.models.violation
import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ContactInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.CharField(help_text='Введите адрес электронной почты.', max_length=254, unique=True, validators=[django.core.validators.EmailValidator(message='Введите корректный адрес электронной почты.')], verbose_name='Электронная почта')),
                ('phone', models.CharField(blank=True, help_text='Введите номер телефона в формате +999999999.', max_length=20, validators=[django.core.validators.RegexValidator(message='Номер телефона должен быть в формате: "+999999999". Допустимо от 9 до 15 цифр.', regex='^\\+?1?\\d{9,15}$')], verbose_name='Номер телефона')),
                ('address', models.TextField(blank=True, help_text='Введите полный адрес.', verbose_name='Адрес')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
            ],
            options={
                'verbose_name': 'Контактная информация',
                'verbose_name_plural': 'Контактные информации',
                'ordering': ['email'],
            },
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Введите название должности (например, "Повар", "Официант").', max_length=100, verbose_name='Название должности')),
                ('description', models.TextField(blank=True, help_text='Введите описание обязанностей и требований для этой должности.', verbose_name='Описание должности')),
                ('salary', models.DecimalField(decimal_places=2, help_text='Введите размер зарплаты для этой должности.', max_digits=10, validators=[SecurityStaff.models.post.validate_salary], verbose_name='Зарплата')),
                ('experience_required', models.PositiveIntegerField(default=0, help_text='Введите требуемый опыт работы в годах.', verbose_name='Требуемый опыт работы')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
            ],
            options={
                'verbose_name': 'Должность',
                'verbose_name_plural': 'Должности',
                'ordering': ['title'],
            },
        ),
        migrations.CreateModel(
            name='ViolationType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Введите название типа нарушения (например, "Опоздание").', max_length=100, unique=True, verbose_name='Название типа нарушения')),
                ('description', models.TextField(blank=True, help_text='Введите описание типа нарушения.', verbose_name='Описание типа нарушения')),
            ],
            options={
                'verbose_name': 'Тип нарушения',
                'verbose_name_plural': 'Типы нарушений',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Waiter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, help_text='Загрузите фотографию официанта.', upload_to='waiters/images/', verbose_name='Фотография')),
                ('first_name', models.CharField(help_text='Введите имя официанта.', max_length=50, validators=[django.core.validators.MinLengthValidator(2, 'Имя должно содержать минимум 2 символа.')], verbose_name='Имя')),
                ('last_name', models.CharField(help_text='Введите фамилию официанта.', max_length=50, validators=[django.core.validators.MinLengthValidator(2, 'Фамилия должна содержать минимум 2 символа.')], verbose_name='Фамилия')),
                ('patronymic', models.CharField(blank=True, help_text='Введите отчество официанта.', max_length=50, verbose_name='Отчество')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('contact_info', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='waiters', to='SecurityStaff.contactinfo')),
                ('posts', models.ManyToManyField(help_text='Выберите должности официанта.', related_name='waiters', to='SecurityStaff.post', verbose_name='Должности')),
            ],
            options={
                'verbose_name': 'Официант',
                'verbose_name_plural': 'Официанты',
                'ordering': ['last_name', 'first_name'],
            },
        ),
        migrations.CreateModel(
            name='Violation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(help_text='Загрузите изображение нарушения (формат: JPG, JPEG, PNG; размер: до 5 МБ).', upload_to='violations/images/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['jpg', 'jpeg', 'png']), SecurityStaff.models.violation.validate_image_size], verbose_name='Изображение нарушения')),
                ('note', models.TextField(blank=True, default='', help_text='Введите дополнительную информацию о нарушении.', verbose_name='Примечание')),
                ('date', models.DateField(auto_now_add=True, help_text='Дата фиксации нарушения.', verbose_name='Дата нарушения')),
                ('violation_type', models.ForeignKey(blank=True, help_text='Выберите тип нарушения.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='SecurityStaff.violationtype', verbose_name='Тип нарушения')),
                ('feedback', models.ForeignKey(help_text='Выберите официанта, связанного с нарушением.', on_delete=django.db.models.deletion.CASCADE, to='SecurityStaff.waiter', verbose_name='Официант')),
            ],
            options={
                'verbose_name': 'Нарушение',
                'verbose_name_plural': 'Нарушения',
                'ordering': ['-date'],
            },
        ),
    ]
