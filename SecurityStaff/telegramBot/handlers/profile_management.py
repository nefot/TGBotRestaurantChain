from aiogram import Router, F
from aiogram.fsm.context import FSMContext
from aiogram.types import Message
from asgiref.sync import sync_to_async

from SecurityStaff.models import Waiter
from ..keyboards import profile_management_keyboard, security_keyboard, back_keyboard
from .employee_profiles import show_waiter_profile

router = Router()


@router.message(F.text == "üë§ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª–µ–º")
async def handle_profile_management(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª–µ–º"""
    await message.answer(
        "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ —Å –ø—Ä–æ—Ñ–∏–ª—è–º–∏:",
        reply_markup=profile_management_keyboard
    )


# profile_management.py
@router.message(F.text == "üÜî –ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å")
async def handle_my_profile(message: Message, bot):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ '–ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å'"""
    if not message.from_user.username:
        await message.answer("–£ –≤–∞—Å –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω username –≤ Telegram")
        return

    user_id = f"@{message.from_user.username}"

    try:
        waiter = await sync_to_async(Waiter.objects.get)(user_id=user_id)
        await show_waiter_profile(message, waiter, bot)
    except Waiter.DoesNotExist:
        await message.answer(
            "–í–∞—à –ø—Ä–æ—Ñ–∏–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Å–∏—Å—Ç–µ–º–µ. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.",
            reply_markup=back_keyboard
        )


@router.message(F.text == "üîô –ù–∞–∑–∞–¥")
async def handle_back_from_profile_management(message: Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ '–ù–∞–∑–∞–¥' –≤ –º–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è–º–∏"""
    await state.clear()
    await message.answer(
        "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:",
        reply_markup=security_keyboard
    )
